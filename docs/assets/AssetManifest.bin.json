"DRIHHWFzc2V0cy9mb250cy9Qb3BwaW5zLUJvbGQudHRmDAENAQcFYXNzZXQHHWFzc2V0cy9mb250cy9Qb3BwaW5zLUJvbGQudHRmByBhc3NldHMvZm9udHMvUG9wcGlucy1SZWd1bGFyLnR0ZgwBDQEHBWFzc2V0ByBhc3NldHMvZm9udHMvUG9wcGlucy1SZWd1bGFyLnR0ZgchYXNzZXRzL2ZvbnRzL1BvcHBpbnMtU2VtaUJvbGQudHRmDAENAQcFYXNzZXQHIWFzc2V0cy9mb250cy9Qb3BwaW5zLVNlbWlCb2xkLnR0ZgcTYXNzZXRzL2ltYWdlcy8xLmpwZwwBDQEHBWFzc2V0BxNhc3NldHMvaW1hZ2VzLzEuanBnBxlhc3NldHMvaW1hZ2VzL2FuZHJvaWQuc3ZnDAENAQcFYXNzZXQHGWFzc2V0cy9pbWFnZXMvYW5kcm9pZC5zdmcHGGFzc2V0cy9pbWFnZXMvZGV2X2ZmLmdpZgwBDQEHBWFzc2V0Bxhhc3NldHMvaW1hZ2VzL2Rldl9mZi5naWYHHWFzc2V0cy9pbWFnZXMvZGV2X2ZsdXR0ZXIuZ2lmDAENAQcFYXNzZXQHHWFzc2V0cy9pbWFnZXMvZGV2X2ZsdXR0ZXIuZ2lmBxdhc3NldHMvaW1hZ2VzL2xvZ28xLnBuZwwBDQEHBWFzc2V0Bxdhc3NldHMvaW1hZ2VzL2xvZ28xLnBuZwcZYXNzZXRzL2ltYWdlcy9tb29uR2lmLmdpZgwBDQEHBWFzc2V0Bxlhc3NldHMvaW1hZ2VzL21vb25HaWYuZ2lmBxhhc3NldHMvaW1hZ2VzL3Jlc3VtZS5naWYMAQ0BBwVhc3NldAcYYXNzZXRzL2ltYWdlcy9yZXN1bWUuZ2lmBxdhc3NldHMvaW1hZ2VzL3J1bGVyLnN2ZwwBDQEHBWFzc2V0Bxdhc3NldHMvaW1hZ2VzL3J1bGVyLnN2ZwcYYXNzZXRzL2ltYWdlcy9zbGlkZXIuc3ZnDAENAQcFYXNzZXQHGGFzc2V0cy9pbWFnZXMvc2xpZGVyLnN2ZwcYYXNzZXRzL2ltYWdlcy9zdW5HaWYuZ2lmDAENAQcFYXNzZXQHGGFzc2V0cy9pbWFnZXMvc3VuR2lmLmdpZgcycGFja2FnZXMvY3VwZXJ0aW5vX2ljb25zL2Fzc2V0cy9DdXBlcnRpbm9JY29ucy50dGYMAQ0BBwVhc3NldAcycGFja2FnZXMvY3VwZXJ0aW5vX2ljb25zL2Fzc2V0cy9DdXBlcnRpbm9JY29ucy50dGYHOXBhY2thZ2VzL2ZvbnRfYXdlc29tZV9mbHV0dGVyL2xpYi9mb250cy9mYS1icmFuZHMtNDAwLnR0ZgwBDQEHBWFzc2V0BzlwYWNrYWdlcy9mb250X2F3ZXNvbWVfZmx1dHRlci9saWIvZm9udHMvZmEtYnJhbmRzLTQwMC50dGYHOnBhY2thZ2VzL2ZvbnRfYXdlc29tZV9mbHV0dGVyL2xpYi9mb250cy9mYS1yZWd1bGFyLTQwMC50dGYMAQ0BBwVhc3NldAc6cGFja2FnZXMvZm9udF9hd2Vzb21lX2ZsdXR0ZXIvbGliL2ZvbnRzL2ZhLXJlZ3VsYXItNDAwLnR0Zgc4cGFja2FnZXMvZm9udF9hd2Vzb21lX2ZsdXR0ZXIvbGliL2ZvbnRzL2ZhLXNvbGlkLTkwMC50dGYMAQ0BBwVhc3NldAc4cGFja2FnZXMvZm9udF9hd2Vzb21lX2ZsdXR0ZXIvbGliL2ZvbnRzL2ZhLXNvbGlkLTkwMC50dGYHMXBhY2thZ2VzL2ljb25zYXhfZmx1dHRlci9mb250cy9GbHV0dGVySWNvbnNheC50dGYMAQ0BBwVhc3NldAcxcGFja2FnZXMvaWNvbnNheF9mbHV0dGVyL2ZvbnRzL0ZsdXR0ZXJJY29uc2F4LnR0Zg=="